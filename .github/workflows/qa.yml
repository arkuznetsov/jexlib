# MIT License
# Copyright (C) 2022 Artem Kuznetsov <ArKuznetsov@gmail.com> and contributors
# All rights reserved.

name: Контроль качества
# Любой пуш и pr в проекте но с фильтром по основному проекту
on: [push, pull_request]

env:
  # отключение безопасности установки, от 2020-10-01
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    if: github.repository == 'arkuznetsov/jexlib'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [jexlib]

    steps:
      # Загрузка проекта
      - name: Актуализация
        uses: actions/checkout@v2
        with:
          # Disabling shadow clone is recomended
          fetch-depth: 0

      # Установка NUnit3
      - name: Установка NUnit3
        shell: pwsh
        run: |
          curl -o "./tools/nuget.exe" https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
          ./tools/nuget.exe restore ./src
          ./tools/nuget.exe install NUnit.ConsoleRunner -Version 3.6.1 -OutputDirectory ./tools

      # Сборка компоненты для тестирования
      - name: Сборка компоненты для тестирования
        run: |
          dotnet restore ./src
          dotnet build ./src --configuration Debug

      # Запуск тестов NUnit3
      - name: Запуск тестов NUnit3 и сборка покрытия
        run: |
          dotnet tool install --global dotnet-coverage
          mkdir "./build/reports"
          dotnet-coverage collect -o ./build/reports/coverage.xml -f xml "./tools/NUnit.ConsoleRunner.3.6.1/tools/nunit3-console.exe ./src/NUnitTests/bin/Debug/net452/NUnitTests.dll --result=./build/reports/nunit-result.xml"

      - name: Извлечение версии пакета
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ steps.packagedef_data.outputs.data }}
          regex: '.Версия\("((?:\d+\.)+\d+)"\)'
        id: extract_version

      - name: Установка Sonar-scanner
        uses: warchant/setup-sonar-scanner@v1

      # Анализ проекта в SonarQube (ветка)
      - name: Анализ в SonarQube (branch)
        if: github.event_name == 'push'
        shell: cmd
        run: sonar-scanner
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.branch.name=${{ env.BRANCH_NAME }}
            -Dsonar.projectVersion=${{ steps.extract_version.outputs.group1 }}

      # Анализ проекта в SonarQube (PR)
      # https://docs.sonarqube.org/latest/analysis/pull-request/
      - name: Анализ в SonarQube (pull-request)
        if: github.event_name == 'pull_request'
        shell: cmd
        run: sonar-scanner
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.branch.name=${{ env.BRANCH_NAME }}
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
            -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }}
